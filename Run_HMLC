#!/bin/bash
#clear
fid="park_joy_640480"
QP=24
MaxCUSize=64
MaxPartitionDepth=4
FramesToBeEncoded=30000
fps=30
path="../HMLC_Results/"
W=640
H=480
rate=10000
cfg="./encoder_lowdelay_P_main.cfg"
opt=""

for i in "$@"
do
case $i in
    -vid=*|--vid=*)
    fid="${i#*=}"
    shift
    ;;
    -qp=*|--qp=*)
    QP="${i#*=}"
    shift
    ;;
    -mcu=*|--mcu=*)
    MaxCUSize="${i#*=}"
    shift
    ;;
    -mpd=*|--mpd=*)
    MaxPartitionDepth="${i#*=}"
    shift
    ;;
    -nf=*|--nf=*)
    FramesToBeEncoded="${i#*=}"
    shift
    ;;
   -fps=*|--fps=*)
    fps="${i#*=}"
    shift
    ;;
   -output_dir=*|--output_dir=*)
    path="${i#*=}"
    shift
    ;;
   -H=*|--H=*|-h=*|--h=*)
    H="${i#*=}"
    shift
    ;;
   -W=*|--W=*|-w=*|--w=*)
    W="${i#*=}"
    shift
    ;;
    -rate=*|--rate=*|-Rate=*|--Rate=*)
    rate="${i#*=}"
    shift
    ;;
    -cfg=*|--cfg=*|-Cfg=*|--Cfg=*)
    cfg="${i#*=}"
    shift
    ;;
    -opt=*|--opt=*|-Opt=*|--Opt=*)
    opt="${i#*=}"
    shift
    ;;
    *)
          # unknown option
    ;;
esac
done
#### End Parsing Command Line Parameters

if [[ ! -e "$path" ]]
then
mkdir $path
echo $path
fi

#find . | xargs chmod 777

if [[ $opt != "" ]]
then
opt="_"$opt
fi

HMLCResults=$path"/"$fid"_QP"$QP"_rate"$rate"_MCU"$MaxCUSize"_Depth"$MaxPartitionDepth"_fps"$fps"_"$opt".dat"
echo $HMLCResults

InputYUV="../vid/"$fid".yuv"
InputMP4="../vid/"$fid".mp4"

if [ $rate = 0 ]
then
RateControl=0
else
RateControl=1
fi

rm $HMLCResults
echo "Input File (YUV) = "$InputYUV > $HMLCResults
echo "Input File (MP4) = "$InputMP4 >> $HMLCResults
echo "Ref_active = "$Ref_active >> $HMLCResults
echo "QP = "$QP >> $HMLCResults
echo "Rate = "$rate >> $HMLCResults
echo "fps = "$fps >> $HMLCResults
echo "MaxCUSize = "$MaxCUSize >> $HMLCResults
echo "MaxPartitionDepth = "$MaxPartitionDepth >> $HMLCResults
echo "" >> $HMLCResults


rm -rf "../vid/HMEncodedVideo.bin"
rm -rf encoder.log

./HM/bin/TAppEncoderStatic -c $cfg --InputFile=$InputYUV --SourceWidth=$W --SourceHeight=$H --SAO=1 --QP=$QP --FrameRate=$fps --FramesToBeEncoded=$FramesToBeEncoded --MaxCUSize=$MaxCUSize --MaxPartitionDepth=$MaxPartitionDepth --QuadtreeTULog2MaxSize=4 --BitstreamFile="../vid/HMEncodedVideo.bin" --RateControl=$RateControl --TargetBitrate=$rate |& tee -a encoder.log

file_size=`du -b "../vid/HMEncodedVideo.bin" | cut -f1`
echo "File Size (.bin) = "$file_size" Bytes" >> $HMLCResults
echo "" >> $HMLCResults

rm -rf "../vid/HMDecodedVideo_Stitching.yuv"
rm -rf decoder.log

./HM/bin/TAppDecoderStatic --BitstreamFile="../vid/HMEncodedVideo.bin" --ReconFile="../vid/HMDecodedVideo_Stitching.yuv" |& tee -a decoder.log

python ./Quality/measure.py  $InputYUV ../vid/HMDecodedVideo_Stitching.yuv $W $H >> $HMLCResults 

## Parsing the Number of frames, size of bitstream, and size of motion info from the $JMFrameStatsOrigFileName
NumFrame=0
Size_Frame_Total=0;
while IFS=$'\t' read -r HMSLine
do
 # printf 'f1: %s\n' "$HMSLine"
  IFS='| ' read -r -a HMSLine_array1 <<< "$HMSLine"
  if [[ "${HMSLine_array1[0]}" == *"POC"* ]]
  then
    NumFrame=$(echo ${HMSLine_array1[1]} | tr -d ' ')
  fi

  IFS=' :()' read -r -a HMSLine_array2 <<< "$HMSLine"
  if [[ "${HMSLine_array2[1]}" == *"written"* ]]
  then
    WrittenBites=$(echo ${HMSLine_array2[4]} | tr -d ' ')
    BitRate=$(echo ${HMSLine_array2[5]} | tr -d ' ')
  fi
done < <(paste "./encoder.log")

echo "" >> $HMLCResults
echo "Number of Frames = "$((NumFrame + 1)) >> $HMLCResults
echo "Number of written bites = "$WrittenBites >> $HMLCResults
echo "Bit Rate = "$BitRate" kbps" >> $HMLCResults

rm temp.txt
mv $HMLCResults temp.txt
cat temp.txt encoder.log >> $HMLCResults
